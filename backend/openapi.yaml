openapi: 3.0.0
info:
  title: Cat API
  version: 1.0.0
  description: REST API for managing cats
servers:
  - url: http://localhost:3001
paths:
  /cats/get:
    get:
      summary: Get all cats
      description: Returns a list of all cats.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Can't not get the cat.
  /cats/post:
    post:
      summary: Add a new cat
      description: Adds a new cat to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the new cat.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Can't not create the cat.
components:
  schemas:
    Cat:
      type: object
      properties:
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
          minimum: 0
          maximum: 50
      required:
        - name
        - breed
        - age
        

  /cats/put/{id}:
    put:
      summary: Update an existing cat
      description: Updates an existing cat in the database.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the cat to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Cat not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unable to update cat

  /cats/delete/{id}:
    delete:
      summary: Delete an existing cat
      description: Deletes an existing cat from the database.
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the cat to delete.
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Cat not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unable to delete cat
components:
  schemas:
    Cat:
      type: object
      properties:
        id:
          type: integer
          description: The cat's ID.
        name:
          type: string
          description: The cat's name.
        age:
          type: integer
          description: The cat's age.
        breed:
          type: string
          description: The cat's breed.
  /staff/login:
    post:
      summary: Staff login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  /staff/signup:
    post:
      summary: Staff sign up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                signupCode:
                  type: string
              required:
                - name
                - email
                - password
                - signupCode
      responses:
        200:
      description: OK
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  /user/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
        401:
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Unable to login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/signup:
    post:
      summary: Sign up user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User signed up successfully
          content:
            text/plain:
              schema:
                type: string
        404:
          description: User member not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Unable to update user member
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string


  /user/signup/google:
    post:
      summary: Sign up user with Google
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codeResponse:
                  type: object
                  properties:
                    access_token:
                      type: string
      responses:
        200:
          description: User signed up successfully with Google
          content:
            text/plain:
              schema:
                type: string
        404:
          description: User member not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Unable to update user member
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /user/login/google:
    post:
      summary: Login user with Google
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codeResponse:
                  type: object
                  properties:
                    access_token:
                      type: string
      responses:
        200:
          description: User logged in successfully with Google
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
        401:
          description: Invalid Google account
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Unable to login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /cat/chatroom/get:
    post:
      summary: Get chat messages for a cat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the cat
              required:
                - id
      responses:
        '200':
          description: A JSON array of chat message objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the chat message
                    cat_id:
                      type: integer
                      description: The ID of the cat associated with the message
                    user_id:
                      type: integer
                      description: The ID of the user who sent the message
                    staff_id:
                      type: integer
                      description: The ID of the staff who sent the message
                    text:
                      type: string
                      description: The text of the chat message

          
  /cat/chatroom/post:
    post:
      summary: Post a new chat message for a cat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the cat
                staff_id:
                  type: integer
                  description: The ID of the staff who sent the message
                user_id:
                  type: integer
                  description: The ID of the user who sent the message
                text:
                  type: string
                  description: The text of the chat message
              required:
                - id
                - staff_id
                - user_id
                - text
      responses:
        '200':
          description: success post a new chat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: success post a new chat

          
  /cats/chatroom/delete/{id}:
    delete:
      summary: Delete a chat message by ID
      parameters:
        - name: id
          in: path
          description: The ID of the chat message to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success to delete the chat message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: success post a new chat

          
  /cat/chatroom/get/staffname:
    post:
      summary: Get the name of a staff member by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the staff member
              required:
                - id
      responses:
        '200':
          description: A JSON array with the staff member's username
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      description: The username of the staff member

          
  /cat/chatroom/get/username:
    post:
      summary: Get the name of a user by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The ID of the user
              required:
                - id
      responses:
        '200':
          description: A JSON array with the user's username
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      description: The username of the user